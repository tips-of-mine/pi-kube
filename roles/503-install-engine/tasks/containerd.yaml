---
- name: Add the [overlay] and [br_netfilter]  modules
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - overlay
    - br_netfilter

- name: Setup required sysctl params, these persist across reboots
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
  with_items:
    - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }
    - { name: 'net.ipv4.ip_forward', value: '1' }
    - { name: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }

- name: Setup repo and install required packages for {{ ansible_distribution }}
  include_tasks: "repo-{{ ansible_distribution }}.yaml"

- name: Install containerd
  package:
    name: containerd.io
    state: latest

- name: Create /etc/containerd directory
  file:
    path: /etc/containerd
    state: directory

- name: Configure containerd
  copy:
    src: config.toml
    dest: /etc/containerd/config.toml
  notify:
    - restart containerd

- name: Create /etc/cni/net.d/ directory
  file:
    path: /etc/cni/net.d
    state: directory
    recurse: yes

#- name: Push /etc/cni/net.d/10-mynet.conf cni configs
#  template:
#    src: 10-mynet.conf.j2
#    dest: /etc/cni/net.d/10-mynet.conf
#  notify:
#    - restart containerd
- name: Puch /etc/cni/net.d/99-loopback.conf
  copy:
    src: 99-loopback.conf
    dest: /etc/cni/net.d/99-loopback.conf
  notify:
    - restart containerd
- name: Create /opt/cni/bin/ directory
  file:
    path: /opt/cni/bin/
    state: directory

- name: Download CNI 0.8.1
  unarchive:
    src: https://github.com/containernetworking/plugins/releases/download/v0.8.1/cni-plugins-linux-amd64-v0.8.1.tgz
    dest: /opt/cni/bin/
    remote_src: yes
    creates: /opt/cni/bin/bridge
  notify:
    - restart containerd

- name: Start Runtime
  systemd:
    state: started
    name: containerd
